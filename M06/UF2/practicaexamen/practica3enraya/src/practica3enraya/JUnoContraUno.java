/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practica3enraya;

import entity.Movimiento;
import entity.Partida;
import java.awt.Color;
import javax.swing.JOptionPane;
import org.hibernate.Session;

/**
 *
 * @author ianlo
 */
public class JUnoContraUno extends javax.swing.JFrame {
    
    boolean jugaX = true;
    boolean jugaO = false;
    int contador = 0;
    boolean ganador = false;
    
    Session session;
    Partida partida;

    /**
     * Creates new form UnoContraUno
     */
    public JUnoContraUno() {
        initComponents();
        jTable1.setGridColor(Color.black);
        jTable1.setShowGrid(true);
        jTable1.setDefaultEditor(Object.class, null);
        partida = new Partida("?");
        nPartida("?");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "", "", ""
            }
        ));
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.setGridColor(new java.awt.Color(0, 0, 0));
        jTable1.setRowHeight(100);
        jTable1.getTableHeader().setResizingAllowed(false);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int fila = obtenirFilaClicada();
        int columna = obtenirColumnaClicada();
        int checker = 0;
        
        if (NoEstaComplert()) {
            if(jugaX && EsNull(fila, columna)) {
                if(checker == 0){
                    Ompleix(fila, columna);
                    CompruebaGanador();
                    checker = 1;
                    jugaO = true;
                    jugaX = false;
                }
            } else if(jugaO && EsNull(fila, columna)) {
                if(checker == 0){ 
                    Ompleix(fila, columna);
                    CompruebaGanador();
                    checker = 1;
                    jugaO = false;
                    jugaX = true;
                }
            } else {
                MuestraError();
            }
            if (!NoEstaComplert() && !ganador){
                MostrarEmpate();
            }
        } 
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JUnoContraUno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JUnoContraUno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JUnoContraUno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JUnoContraUno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JUnoContraUno().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private int obtenirFilaClicada() {
        int clicat = jTable1.getSelectedRow();
        
        return clicat;
    }

    private int obtenirColumnaClicada() {
        int clicat = jTable1.getSelectedColumn();
        
        return clicat;
    }

    private boolean NoEstaComplert() {
        boolean noComplert = false;
        if (contador != 9) {
            noComplert = true;
        }
        
        return noComplert;
    }

    private boolean EsNull(int fila, int columna) {
        boolean esNull = false;
        if (jTable1.getValueAt(fila, columna) == null) {
            esNull = true;
        }
        
        return esNull;
    }

    private void Ompleix(int fila, int columna) {
        if (jugaX) {
            jTable1.setValueAt("X", fila, columna);
            nMovimiento("X", fila, columna);
        } else {
            jTable1.setValueAt("O", fila, columna);
             nMovimiento("O", fila, columna);
        }
        contador++;
    }

    private void MuestraError() {
        JOptionPane.showMessageDialog(null, "Error", "3 EN RAYA", 
                JOptionPane.ERROR_MESSAGE);
    }

    private void MostrarEmpate() {
        JOptionPane.showMessageDialog(null, "Empate", "3 en raya", 
                JOptionPane.OK_OPTION);
        JMenu tresenraya = new JMenu();
        tresenraya.setVisible(true);
        dispose();
    }

    private void CompruebaGanador() {
        if ((jTable1.getValueAt(0, 0) == "X" && jTable1.getValueAt(0, 1) == "X" && jTable1.getValueAt(0, 2) == "X") ||
                (jTable1.getValueAt(1, 0) == "X" && jTable1.getValueAt(1, 1) == "X" && jTable1.getValueAt(1, 2) == "X") ||
                (jTable1.getValueAt(2, 0) == "X" && jTable1.getValueAt(2, 1) == "X" && jTable1.getValueAt(2, 2) == "X") ||
                (jTable1.getValueAt(0, 0) == "X" && jTable1.getValueAt(1, 0) == "X" && jTable1.getValueAt(2, 0) == "X") ||
                (jTable1.getValueAt(0, 1) == "X" && jTable1.getValueAt(1, 1) == "X" && jTable1.getValueAt(2, 1) == "X") ||
                (jTable1.getValueAt(0, 2) == "X" && jTable1.getValueAt(1, 2) == "X" && jTable1.getValueAt(2, 2) == "X") ||
                (jTable1.getValueAt(0, 0) == "X" && jTable1.getValueAt(1, 1) == "X" && jTable1.getValueAt(2, 2) == "X") ||
                (jTable1.getValueAt(0, 2) == "X" && jTable1.getValueAt(1, 1) == "X" && jTable1.getValueAt(2, 0) == "X")) {
            JOptionPane.showMessageDialog(null, "GANAN LAS X", "3 en raya", 
                JOptionPane.OK_OPTION);
            JMenu tresenraya = new JMenu();
            tresenraya.setVisible(true);
            ganador = true;
            nPartida("X");
            dispose();
        } else if ((jTable1.getValueAt(0, 0) == "O" && jTable1.getValueAt(0, 1) == "O" && jTable1.getValueAt(0, 2) == "O") ||
                (jTable1.getValueAt(1, 0) == "O" && jTable1.getValueAt(1, 1) == "O" && jTable1.getValueAt(1, 2) == "O") ||
                (jTable1.getValueAt(2, 0) == "O" && jTable1.getValueAt(2, 1) == "O" && jTable1.getValueAt(2, 2) == "O") ||
                (jTable1.getValueAt(0, 0) == "O" && jTable1.getValueAt(1, 0) == "O" && jTable1.getValueAt(2, 0) == "O") ||
                (jTable1.getValueAt(0, 1) == "O" && jTable1.getValueAt(1, 1) == "O" && jTable1.getValueAt(2, 1) == "O") ||
                (jTable1.getValueAt(0, 2) == "O" && jTable1.getValueAt(1, 2) == "O" && jTable1.getValueAt(2, 2) == "O") ||
                (jTable1.getValueAt(0, 0) == "O" && jTable1.getValueAt(1, 1) == "O" && jTable1.getValueAt(2, 2) == "O") ||
                (jTable1.getValueAt(0, 2) == "O" && jTable1.getValueAt(1, 1) == "O" && jTable1.getValueAt(2, 0) == "O")){
            JOptionPane.showMessageDialog(null, "GANAN LAS O", "3 en raya", 
                JOptionPane.OK_OPTION);
            JMenu tresenraya = new JMenu();
            tresenraya.setVisible(true);
            ganador = true;
            nPartida("O");
            dispose();
        }
    }
    
    private void nPartida(String ganador){
        partida.setGanador(ganador);
        
        try {
            session = NewHibernateUtil.getSessionFactory().openSession();
            session.beginTransaction();
            session.saveOrUpdate(partida);
            session.getTransaction().commit();
        } finally {
            session.close();
        }
    }
    
    private void nMovimiento(String turnode, int fila, int columna){
        Movimiento movimiento = new Movimiento(partida, turnode, fila, columna);
        
        try {
            session = NewHibernateUtil.getSessionFactory().openSession();
            session.beginTransaction();
            session.save(movimiento);
            session.getTransaction().commit();
        } finally {
            session.close();
        }
    }
}